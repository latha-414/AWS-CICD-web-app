name: Tag and Release

on:
  workflow_dispatch:
    inputs:
      release_type:
        description: "Select the type of release"
        required: true
        default: "patch"
        type: choice
        options:
          - major
          - minor
          - patch

permissions:
  contents: write
  pull-requests: read

jobs:
  create_release:
    runs-on: ubuntu-latest

    steps:
      # Checkout the repository
      - name: Checkout Repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          ref: pr-branch

      # Get PR Details using Get PR Action
      - name: Get Current PR Details
        id: pr_details
        uses: cloudposse-github-actions/get-pr@main
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          id: ${{ github.event.number }}

      # Extract Current PR Details
      - name: Extract Current PR Details
        id: extract_current_pr
        run: |
          CURRENT_PR_NUMBER="${{ fromJSON(steps.pr_details.outputs.json).number }}"
          CURRENT_PR_TITLE="${{ fromJSON(steps.pr_details.outputs.json).title }}"
          CURRENT_PR_URL="${{ fromJSON(steps.pr_details.outputs.json).url }}"
          CURRENT_PR_AUTHOR="${{ fromJSON(steps.pr_details.outputs.json).user.login }}"
          echo "CURRENT_PR_NUMBER=${CURRENT_PR_NUMBER}" >> $GITHUB_ENV
          echo "CURRENT_PR_TITLE=${CURRENT_PR_TITLE}" >> $GITHUB_ENV
          echo "CURRENT_PR_URL=${CURRENT_PR_URL}" >> $GITHUB_ENV
          echo "CURRENT_PR_AUTHOR=${CURRENT_PR_AUTHOR}" >> $GITHUB_ENV

      # Get Merged PR Details
      - name: Get Merged PRs
        id: merged_prs
        run: |
          MERGED_PRS=$(gh pr list --state merged --json number,title,author,mergeCommit --jq '.[] | {number, title, author: .author.login, merge_commit: .mergeCommit.oid}')
          echo "MERGED_PRS=${MERGED_PRS}" >> $GITHUB_ENV

      # Parse and Save Merged PR Details
      - name: Save Merged PR Details
        run: |
          echo "### Merged PRs" > MERGED_PR_DETAILS.md
          echo "${{ env.MERGED_PRS }}" | jq -c '.[]' | while read pr; do
            PR_NUMBER=$(echo "$pr" | jq -r '.number')
            PR_TITLE=$(echo "$pr" | jq -r '.title')
            PR_AUTHOR=$(echo "$pr" | jq -r '.author')
            PR_MERGE_COMMIT=$(echo "$pr" | jq -r '.merge_commit')
            echo "- PR #${PR_NUMBER}: ${PR_TITLE} by @${PR_AUTHOR} (Commit: ${PR_MERGE_COMMIT})" >> MERGED_PR_DETAILS.md
          done

      # Tag and Release
      - name: Tag and Release
        id: tag_release
        uses: mathieudutour/github-tag-action@v6.2
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          default_bump: ${{ github.event.inputs.release_type }}
          tag_prefix: v

      # Export the new tag
      - name: Get New Tag
        run: echo "NEW_TAG=${{ steps.tag_release.outputs.new_tag }}" >> $GITHUB_ENV

      # Generate Changelog
      - name: Generate Changelog
        id: changelog
        uses: TriPSs/conventional-changelog-action@v5
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          git-branch: pr-branch
          tag-prefix: v
          output-file: CHANGELOG.md

      # Append PR Details to the changelog
      - name: Append PR Details to Changelog
        run: |
          echo "Release ${{ env.NEW_TAG }} Latest" >> CHANGELOG.md
          echo "### Current PR Details" >> CHANGELOG.md
          echo "- PR [#${{ env.CURRENT_PR_NUMBER }}](${{ env.CURRENT_PR_URL }}): ${{ env.CURRENT_PR_TITLE }} by @${{ env.CURRENT_PR_AUTHOR }}" >> CHANGELOG.md
          echo "" >> CHANGELOG.md
          cat MERGED_PR_DETAILS.md >> CHANGELOG.md

      # Create GitHub Release
      - name: Create GitHub Release
        uses:
