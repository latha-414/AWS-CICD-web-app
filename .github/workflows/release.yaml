name: Tag and Release

on:
  workflow_dispatch:
    inputs:
      release_type:
        description: "Select the type of release"
        required: true
        default: "patch"
        type: choice
        options:
          - major
          - minor
          - patch

permissions:
  contents: write
  pull-requests: read

jobs:
  create_release:
    runs-on: ubuntu-latest

    steps:
      # Checkout the repository
      - name: Checkout Repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      # Tag and Release
      - name: Tag and Release
        id: tag_release
        uses: mathieudutour/github-tag-action@v6.2
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          default_bump: ${{ github.event.inputs.release_type }}
          tag_prefix: v

      # Export the new tag
      - name: Get New Tag
        run: echo "NEW_TAG=${{ steps.tag_release.outputs.new_tag }}" >> $GITHUB_ENV

      # Generate Changelog
      - name: Generate Changelog
        id: changelog
        uses: TriPSs/conventional-changelog-action@v5
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          tag-prefix: v
          output-file: CHANGELOG.md
      - name: Get the merged pull request information
        uses: yu-iskw/merged-pr-info-action@v1.0.2
        id: merged-pr-info
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
      - name: "Comment to the merged pull request"
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          debug: true
          script: |
            const pr_number = "${{ steps.merged-pr-info.outputs.pull-request-number }}";
            await github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: pr_number,
              body: "@" + "${{ steps.merged-pr-info.outputs.pull-request-creator }}" +  " The jobs are passed!"
            });
            console.log(`Commented to the pull request ${pr_number}`);

      # Append Merged PR Details to Changelog
      - name: Append PR Details to Changelog
        run: |
          PR_NUMBER="${{ steps.merged-pr-info.outputs.pull-request-number }}"
          PR_TITLE="${{ steps.merged-pr-info.outputs.pull-request-title }}"
          PR_URL="${{ steps.merged-pr-info.outputs.pull-request-url }}"
          PR_CREATOR="${{ steps.merged-pr-info.outputs.pull-request-creator }}"
          
          # Create Changelog with Release Version and PR Details
          echo "Release ${{ env.NEW_TAG }} Latest" >> CHANGELOG.md
          echo "### Merged PR Details" >> CHANGELOG.md
          echo "- PR [#$PR_NUMBER]($PR_URL): $PR_TITLE by @$PR_CREATOR" >> CHANGELOG.md

      # Create GitHub Release
      - name: Create GitHub Release
        uses: actions/create-release@v1
        with:
          tag_name: "${{ env.NEW_TAG }}"
          release_name: "Release ${{ env.NEW_TAG }}"
          body_path: CHANGELOG.md
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
