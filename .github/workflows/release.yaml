name: Tag and Release

on:
  workflow_dispatch:
    inputs:
      release_type:
        description: "Select the type of release"
        required: true
        default: "patch"
        type: choice
        options:
          - major
          - minor
          - patch

permissions:
  contents: write
  pull-requests: read

jobs:
  create_release:
    runs-on: ubuntu-latest

    steps:
      # Checkout the repository
      - name: Checkout Repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          ref: pr-branch

      # Tag and Release
      - name: Tag and Release
        id: tag_release
        uses: mathieudutour/github-tag-action@v6.2
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          default_bump: ${{ github.event.inputs.release_type }}
          tag_prefix: v

      # Export the new tag
      - name: Get New Tag
        run: echo "NEW_TAG=${{ steps.tag_release.outputs.new_tag }}" >> $GITHUB_ENV

      # Generate Changelog
      - name: Generate Changelog
        id: changelog
        uses: TriPSs/conventional-changelog-action@v5
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          git-branch: pr-branch
          tag-prefix: v
          output-file: CHANGELOG.md

      # Get Closed PR Details
      - name: Get Closed PR Details
        id: pr_details
        uses: peter-evans/closed-pull-requests@v2
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          pr_state: closed
          per_page: 5

      # Extract and Format PR Details
      - name: Format PR Details
        run: |
          echo "${{ steps.pr_details.outputs.pull_requests }}" > pr_details.json
          jq -r '.[] | "- PR [#\(.number)](\(.html_url)): \(.title) by @\(.user.login)"' pr_details.json > pr_details.txt
          cat pr_details.txt
          echo "PR_DETAILS=$(cat pr_details.txt)" >> $GITHUB_ENV

      # Append PR Details to Changelog
      - name: Append PR Details to Changelog
        run: |
          echo "### Release ${{ env.NEW_TAG }} Latest" >> CHANGELOG.md
          echo "### PR Details" >> CHANGELOG.md
          echo "${{ env.PR_DETAILS }}" >> CHANGELOG.md

      # Create GitHub Release
      - name: Create GitHub Release
        uses: actions/create-release@v1
        with:
          tag_name: "${{ env.NEW_TAG }}"
          release_name: "Release ${{ env.NEW_TAG }}"
          body_path: CHANGELOG.md
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
