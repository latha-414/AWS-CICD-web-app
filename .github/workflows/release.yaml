name: Tag and Release
on:
  workflow_dispatch:
    inputs:
      release_type:
        description: "Select the type of release"
        required: true
        default: "patch"
        type: choice
        options:
          - major
          - minor
          - patch

permissions:
  contents: write
  pull-requests: read

jobs:
  create_release:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Tag and Release
        id: tag_release
        uses: mathieudutour/github-tag-action@v6.2
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          default_bump: ${{ github.event.inputs.release_type }}
          tag_prefix: v

      - name: Get New Tag
        run: echo "NEW_TAG=${{ steps.tag_release.outputs.new_tag }}" >> $GITHUB_ENV

      - name: Get Closed and Merged PRs
        id: pr_details
        uses: 8BitJonny/gh-get-current-pr@3.0.0
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          filterOutClosed: false  # Ensure this is set to false to include closed PRs
          filterOutDraft: true   # Optional: Filter out draft PRs if needed

      - name: Debug PR Details
        run: |
          echo "PR Details: ${{ steps.pr_details.outputs }}"  # Log all outputs of the PR details step

      - name: Log PR Details
        if: steps.pr_details.outputs.pr_found == 'true'
        run: |
          echo "PR Number: ${{ steps.pr_details.outputs.number }}"
          echo "PR Title: ${{ steps.pr_details.outputs.pr_title }}"
          echo "PR URL: ${{ steps.pr_details.outputs.pr_url }}"
          echo "PR Merged At: ${{ steps.pr_details.outputs.pr_merged_at }}"

      - name: Append Merged PR Details to Changelog
        if: steps.pr_details.outputs.pr_found == 'true' && steps.pr_details.outputs.pr_merged_at != ''
        run: |
          echo "### Merged PR Details" >> CHANGELOG.md
          echo "PR Number: ${{ steps.pr_details.outputs.number }}" >> CHANGELOG.md
          echo "PR Title: ${{ steps.pr_details.outputs.pr_title }}" >> CHANGELOG.md
          echo "PR URL: ${{ steps.pr_details.outputs.pr_url }}" >> CHANGELOG.md
          echo "PR Merged At: ${{ steps.pr_details.outputs.pr_merged_at }}" >> CHANGELOG.md

      - name: Generate Changelog
        id: changelog
        uses: TriPSs/conventional-changelog-action@v5
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          git-branch: ${{ github.ref_name }}
          tag-prefix: v
          output-file: CHANGELOG.md

      - name: Set Changelog Content to Environment Variable
        id: changelog_content
        run: |
          changelog_content=$(cat CHANGELOG.md)
          echo "CHANGELOG_CONTENT<<EOF" >> $GITHUB_ENV
          echo "$changelog_content" >> $GITHUB_ENV
          echo "EOF" >> $GITHUB_ENV

      - name: Create GitHub Release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          CHANGELOG_CONTENT: ${{ env.CHANGELOG_CONTENT }}
        with:
          tag_name: "${{ env.NEW_TAG }}"
          release_name: "Release ${{ env.NEW_TAG }}"
          body: ${{ env.CHANGELOG_CONTENT }}
          draft: false
          prerelease: false
