name: Tag and Release

on:
  workflow_dispatch:
    inputs:
      release_type:
        description: "Select the type of release"
        required: true
        default: "patch"
        type: choice
        options:
          - major
          - minor
          - patch

permissions:
  contents: write
  pull-requests: read

jobs:
  create_release:
    runs-on: ubuntu-latest

    steps:
      # Checkout the repository
      - name: Checkout Repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          ref: pr-branch

      # Generate the initial changelog
      - name: Generate Initial Changelog
        id: changelog
        uses: TriPSs/conventional-changelog-action@v5
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          git-branch: pr-branch
          tag-prefix: v
          output-file: CHANGELOG.md

      # Fetch closed PR details
      - name: Get closed PRs
        id: get_prs
        uses: cloudposse/github-actions/get-pr@v2.0.0
        with:
          state: closed
          github-token: ${{ secrets.GITHUB_TOKEN }}

      # Debug: Verify fetched PR details
      - name: Debug PR Details
        run: |
          echo "Fetched PRs: ${{ steps.get_prs.outputs.number }} - ${{ steps.get_prs.outputs.title }} - ${{ steps.get_prs.outputs.url }} - ${{ steps.get_prs.outputs.author }}"

      # Format PR details and append to changelog
      - name: Format and Append PR Details to Changelog
        run: |
          echo "PR #${{ steps.get_prs.outputs.number }}: [${{ steps.get_prs.outputs.title }}](${{ steps.get_prs.outputs.url }}) by @${{ steps.get_prs.outputs.author }}" >> CHANGELOG.md

      # Tag and Release
      - name: Tag and Release
        id: tag_release
        uses: mathieudutour/github-tag-action@v6.2
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          default_bump: ${{ github.event.inputs.release_type }}
          tag_prefix: v

      # Export the new tag
      - name: Get New Tag
        run: echo "NEW_TAG=${{ steps.tag_release.outputs.new_tag }}" >> $GITHUB_ENV

      # Create GitHub Release
      - name: Create GitHub Release
        uses: actions/create-release@v1
        with:
          tag_name: "${{ env.NEW_TAG }}"
          release_name: "Release ${{ env.NEW_TAG }}"
          body_path: CHANGELOG.md
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
