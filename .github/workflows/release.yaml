name: Tag and Release

on:
  workflow_dispatch:
    inputs:
      release_type:
        description: "Select the type of release"
        required: true
        default: "patch"
        type: choice
        options:
          - major
          - minor
          - patch

permissions:
  contents: write
  pull-requests: read

jobs:
  create_release:
    runs-on: ubuntu-latest

    steps:
      # Checkout the repository
      - name: Checkout Repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          ref: pr-branch

      # Tag and Release
      - name: Tag and Release
        id: tag_release
        uses: mathieudutour/github-tag-action@v6.2
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          default_bump: ${{ github.event.inputs.release_type }}
          tag_prefix: v

      # Export the new tag
      - name: Get New Tag
        run: echo "NEW_TAG=${{ steps.tag_release.outputs.new_tag }}" >> $GITHUB_ENV

      # Generate Changelog
      - name: Generate Changelog
        id: changelog
        uses: TriPSs/conventional-changelog-action@v5
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          git-branch: pr-branch
          tag-prefix: v
          output-file: CHANGELOG.md

      # Get PR Merge Details using justinyoo/github-pr-merge-action
      - name: Get PR Merge Details
        id: fetchDetails
        uses: justinyoo/github-pr-merge-action@v1
        with:
          authToken: ${{ secrets.GITHUB_TOKEN }}
          owner: ${{ github.repository_owner }}
          repository: ${{ github.event.repository.name }}
          issueId: ${{ github.event.pull_request.number }}
          mergeMethod: merge
          deleteBranch: false

      # Extract PR Author from the PR Merge Details output
      - name: Extract PR Author
        id: extract_author
        run: |
          PR_AUTHOR="${{ steps.fetchDetails.outputs.author }}"
          echo "PR_AUTHOR=${PR_AUTHOR}" >> $GITHUB_ENV

      # Append PR Details to the changelog
      - name: Append PR Details to Changelog
        run: |
          PR_NUMBER="${{ steps.fetchDetails.outputs.pull-request-number }}"
          PR_TITLE="${{ steps.fetchDetails.outputs.pull-request-title }}"
          PR_URL="${{ steps.fetchDetails.outputs.pull-request-url }}"
          PR_AUTHOR="${{ env.PR_AUTHOR }}"
          
          # Create Changelog with Release Version and PR Details
          echo "Release ${{ env.NEW_TAG }} Latest" >> CHANGELOG.md
          echo "### PR Details" >> CHANGELOG.md
          echo "- PR [#$PR_NUMBER]($PR_URL): $PR_TITLE by @$PR_AUTHOR" >> CHANGELOG.md

      # Create GitHub Release
      - name: Create GitHub Release
        uses: actions/create-release@v1
        with:
          tag_name: "${{ env.NEW_TAG }}"
          release_name: "Release ${{ env.NEW_TAG }}"
          body_path: CHANGELOG.md
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
