name: Tag and Release

on:
  push:
    branches:
      - main  # Set to your primary branch
  workflow_dispatch:
    inputs:
      release_type:
        description: "Select the type of release"
        required: true
        default: "patch"
        type: choice
        options:
          - major
          - minor
          - patch

permissions:
  contents: write
  pull-requests: read

jobs:
  create_release:
    runs-on: ubuntu-latest

    steps:
      # Checkout the repository
      - name: Checkout Repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      # Tag and Release
      - name: Tag and Release
        id: tag_release
        uses: mathieudutour/github-tag-action@v6.2
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          default_bump: ${{ github.event.inputs.release_type }}
          tag_prefix: v

      # Export the new tag
      - name: Get New Tag
        run: echo "NEW_TAG=${{ steps.tag_release.outputs.new_tag }}" >> $GITHUB_ENV

      # Generate Changelog
      - name: Generate Changelog
        id: changelog
        uses: TriPSs/conventional-changelog-action@v5
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          git-branch: pr-branch
          tag-prefix: v
          output-file: CHANGELOG.md

      # Get Merged PR Details using "Get Merged Pull Requests" Action
      - name: Actions Ecosystem Action Get Merged Pull Request
        uses: actions-ecosystem/action-get-merged-pull-request@v1.0.1
        id: pr_details
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          base: main  # Set this to your main branch name

     # Set PR Details as Environment Variables
      - name: Set PR Details
        run: |  
          echo "PR_NUMBER=$(echo '${{ steps.pr_details.outputs.prs }}' | jq -r '.[0].number')" >> $GITHUB_ENV 
          echo "PR_TITLE=$(echo '${{ steps.pr_details.outputs.prs }}' | jq -r '.[0].title')" >> $GITHUB_ENV 
          echo "PR_URL=$(echo '${{ steps.pr_details.outputs.prs }}' | jq -r '.[0].html_url')" >> $GITHUB_ENV 
          echo "PR_AUTHOR=$(echo '${{ steps.pr_details.outputs.prs }}' | jq -r '.[0].user.login')" >> $GITHUB_ENV 
          
    # Output PR Details
      - name: Output PR Details
        run: | 
          echo "PR Number: ${{ env.PR_NUMBER }}" 
          echo "PR Title: ${{ env.PR_TITLE }}" 
          echo "PR URL: ${{ env.PR_URL }}" 
          echo "PR Author: ${{ env.PR_AUTHOR }}"

      # Create GitHub Release
      - name: Create GitHub Release
        uses: actions/create-release@v1
        with:
          tag_name: "${{ env.NEW_TAG }}"
          release_name: "Release ${{ env.NEW_TAG }}"
          body_path: CHANGELOG.md
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
