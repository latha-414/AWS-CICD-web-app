name: Tag and Release

on:
  pull_request:
    types: [opened, synchronize]  # Trigger on PR creation or updates
    branches:
      - main  # The branch you're targeting for pull requests

  workflow_dispatch:
    inputs:
      release_type:
        description: "Select the type of release"
        required: true
        default: "patch"  # Default to 'patch' versioning
        type: choice
        options:
          - major
          - minor
          - patch

permissions:
  contents: write  # Needed for creating releases

jobs:
  create_release:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0  # Ensure the full commit history is available

      - name: Tag and Release
        id: tag_release
        uses: mathieudutour/github-tag-action@v6.2
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          default_bump: ${{ github.event.inputs.release_type }}  # Use the manual input for release type
          tag_prefix: v  # Tag prefix for versions

      - name: Get New Tag
        run: echo "NEW_TAG=${{ steps.tag_release.outputs.new_tag }}" >> $GITHUB_ENV

      - name: Generate Changelog
        id: changelog
        uses: TriPSs/conventional-changelog-action@v5
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          git-branch: pr-branch  # The branch you are working on (you can change as needed)
          tag-prefix: v
          output-file: CHANGELOG.md

      - name: List Merged PRs
        id: merged_prs
        uses: tiwanari/list-merged-pull-requests@master
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
        if: github.event_name == 'pull_request'

      - name: Debug Merged PRs Output
        run: |
          echo "Merged PRs: ${{ steps.merged_prs.outputs.pull_requests }}"
          echo "${{ steps.merged_prs.outputs.pull_requests }}" > merged_prs_debug.txt
        continue-on-error: true

      - name: Append Merged PRs to Release Body
        run: |
          echo -e "\n## Merged Pull Requests\n" >> release_notes.md
          echo "${{ steps.merged_prs.outputs.pull_requests }}" >> release_notes.md

      - name: Create GitHub Release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: "${{ env.NEW_TAG }}"
          release_name: "Release ${{ env.NEW_TAG }}"
          body: |
            Changelog:
            ${{ steps.changelog.outputs.changelog }}
            ## Merged PRs:
            ${{ steps.merged_prs.outputs.pull_requests }}
          draft: false
          prerelease: false
