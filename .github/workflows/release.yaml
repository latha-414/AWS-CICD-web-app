name: Tag and Release
on:
  workflow_dispatch:
    inputs:
      release_type:
        description: "Select the type of release"
        required: true
        default: "patch"
        type: choice
        options:
          - major
          - minor
          - patch

permissions:
  contents: write
  pull-requests: read

jobs:
  create_release:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Tag and Release
        id: tag_release
        uses: mathieudutour/github-tag-action@v6.2
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          default_bump: ${{ github.event.inputs.release_type }}
          tag_prefix: v

      - name: Get New Tag
        run: echo "NEW_TAG=${{ steps.tag_release.outputs.new_tag }}" >> $GITHUB_ENV

      - name: Get Merged PRs (Closed)
        id: get_merged_prs
        run: |
          merged_prs=$(curl -s -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
            "https://api.github.com/repos/${{ github.repository }}/pulls?state=closed" | jq -r '.[] | select(.merged_at != null) | "PR Number: \(.number)\nPR Title: \(.title)\nPR Merged At: \(.merged_at)\nPR URL: \(.html_url)\n"')
          
          echo "Merged PRs: $merged_prs"
          echo "$merged_prs" >> $GITHUB_ENV

      - name: Append Merged PR Details to Changelog
        run: |
          echo "### Merged PR Details" >> CHANGELOG.md
          echo "${{ env.merged_prs }}" >> CHANGELOG.md

      - name: Generate Changelog
        id: changelog
        uses: TriPSs/conventional-changelog-action@v5
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          git-branch: ${{ github.ref_name }}
          tag-prefix: v
          output-file: CHANGELOG.md

      - name: Set Changelog Content to Environment Variable
        id: changelog_content
        run: |
          changelog_content=$(cat CHANGELOG.md)
          echo "CHANGELOG_CONTENT<<EOF" >> $GITHUB_ENV
          echo "$changelog_content" >> $GITHUB_ENV
          echo "EOF" >> $GITHUB_ENV

      - name: Create GitHub Release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          CHANGELOG_CONTENT: ${{ env.CHANGELOG_CONTENT }}
        with:
          tag_name: "${{ env.NEW_TAG }}"
          release_name: "Release ${{ env.NEW_TAG }}"
          body: ${{ env.CHANGELOG_CONTENT }}
          draft: false
          prerelease: false
