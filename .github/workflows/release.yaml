name: Tag and Release

on:
  workflow_dispatch:
    inputs:
      release_type:
        description: "Select the type of release"
        required: true
        default: "patch"
        type: choice
        options:
          - major
          - minor
          - patch

permissions:
  contents: write
  pull-requests: read

jobs:
  create_release:
    runs-on: ubuntu-latest

    steps:
      # Checkout the repository
      - name: Checkout Repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          ref: main  # Changed to 'main' branch

      # Install GitHub CLI
      - name: Install GitHub CLI
        run: |
          sudo apt-get update
          sudo apt-get install -y gh

      # Authenticate GitHub CLI
      - name: Authenticate GitHub CLI
        run: |
          echo "${{ secrets.GITHUB_TOKEN }}" | gh auth login --with-token

      # Debug GitHub CLI authentication
      - name: Debug GitHub CLI Authentication
        run: gh auth status

      # Tag and Release
      - name: Tag and Release
        id: tag_release
        uses: mathieudutour/github-tag-action@v6.2
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          default_bump: ${{ github.event.inputs.release_type }}
          tag_prefix: v

      # Export the new tag
      - name: Get New Tag
        run: echo "NEW_TAG=${{ steps.tag_release.outputs.new_tag }}" >> $GITHUB_ENV

      # Generate Changelog
      - name: Generate Changelog
        id: changelog
        uses: TriPSs/conventional-changelog-action@v5
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          git-branch: main  # Changed to 'main' branch
          tag-prefix: v
          output-file: CHANGELOG.md

      # Install jq
      - name: Install jq
        run: sudo apt-get install -y jq

      # Get PR Details and append to the changelog
      - name: Get PR Details
        run: |
          gh pr list --state merged --base main --json number,title,url > pr_debug.json
          echo "PR Debug JSON:"
          cat pr_debug.json
          pr_details=$(cat pr_debug.json)
          echo "### PR Details" >> CHANGELOG.md
          if [[ -z "$pr_details" ]]; then
            echo "No PRs found" >> CHANGELOG.md
          else
            echo "$pr_details" | jq -r '.[] | "- PR [#" + (.number|tostring) + "](" + .url + "): " + .title' >> CHANGELOG.md
          fi

      # Create GitHub Release
      - name: Create GitHub Release
        uses: actions/create-release@v1
        with:
          tag_name: "${{ env.NEW_TAG }}"
          release_name: "Release ${{ env.NEW_TAG }}"
          body_path: CHANGELOG.md
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
