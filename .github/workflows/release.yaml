name: Tag and Release
on:
  workflow_dispatch:
    inputs:
      release_type:
        description: "Select the type of release"
        required: true
        default: "patch"
        type: choice
        options:
          - major
          - minor
          - patch

permissions:
  contents: write

jobs:
  create_release:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          git-branch: pr-branch

      - name: Tag and Release
        id: tag_release
        uses: mathieudutour/github-tag-action@v6.2
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          default_bump: ${{ github.event.inputs.release_type }}
          tag_prefix: v

      - name: Get New Tag
        run: echo "NEW_TAG=${{ steps.tag_release.outputs.new_tag }}" >> $GITHUB_ENV

      - name: Fetch Closed and Merged PRs
        id: fetch_pr
        uses: 8BitJonny/gh-get-current-pr@3.0.0
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          filterOutClosed: false  # Fetch closed PRs
          filterOutDraft: true    # Exclude draft PRs

      - name: Log PR Details
        if: steps.fetch_pr.outputs.pr_found == 'true'
        run: |
          echo "Found PR Details:"
          echo "PR Number: ${{ steps.fetch_pr.outputs.number }}"
          echo "PR URL: ${{ steps.fetch_pr.outputs.pr_url }}"
          echo "PR Title: ${{ steps.fetch_pr.outputs.pr_title }}"
          echo "PR State: Closed or Merged"
          echo "PR Merged At: ${{ steps.fetch_pr.outputs.pr_merged_at }}"

      - name: Generate Changelog
        id: changelog
        uses: TriPSs/conventional-changelog-action@v5
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          git-branch: pr-branch
          tag-prefix: v
          output-file: CHANGELOG.md
     
      - name: Create GitHub Release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: "${{ env.NEW_TAG }}"
          release_name: "Release ${{ env.NEW_TAG }}"
          body: "${{ steps.changelog.outputs.changelog }}"
          draft: false
          prerelease: false
