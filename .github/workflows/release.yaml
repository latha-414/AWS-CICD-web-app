name: Tag, Release, and Fetch Merged PR Details

on:
  push:
    branches:
      - main  # Replace with your default branch name, e.g., 'main' or 'master'

permissions:
  contents: write
  pull-requests: read

jobs:
  create_release:
    runs-on: ubuntu-latest

    steps:
      # Checkout the repository
      - name: Checkout Repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      # Fetch merged PR details (only runs when a PR is merged to the main branch)
      - name: Get Merged Pull Request Details
        uses: actions-ecosystem/action-get-merged-pull-request@v1.0.1
        id: pr_details
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}

      # Display PR Details (optional, for logging purposes)
      - name: Display PR Details
        run: |
          echo "PR Title: ${{ steps.pr_details.outputs.title }}"
          echo "PR Body: ${{ steps.pr_details.outputs.body }}"
          echo "PR Number: ${{ steps.pr_details.outputs.number }}"
          echo "PR Labels: ${{ steps.pr_details.outputs.labels }}"
          echo "PR Assignees: ${{ steps.pr_details.outputs.assignees }}"

      # Tag and Release
      - name: Tag and Release
        id: tag_release
        uses: mathieudutour/github-tag-action@v6.2
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          default_bump: patch  # Or use ${{ github.event.inputs.release_type }} for dynamic bump
          tag_prefix: v

      # Export the new tag
      - name: Get New Tag
        run: echo "NEW_TAG=${{ steps.tag_release.outputs.new_tag }}" >> $GITHUB_ENV

      # Generate Changelog
      - name: Generate Changelog
        id: changelog
        uses: TriPSs/conventional-changelog-action@v5
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          git-branch: pr-branch  # Replace with the branch to generate changelog from
          tag-prefix: v
          output-file: CHANGELOG.md

      # Append Merged PR Details to Changelog
      - name: Append Merged PR Details to Changelog
        run: |
          echo -e "\n### Merged PR: ${{ steps.pr_details.outputs.number }}" >> CHANGELOG.md
          echo -e "Title: ${{ steps.pr_details.outputs.title }}" >> CHANGELOG.md
          echo -e "Body: ${{ steps.pr_details.outputs.body }}" >> CHANGELOG.md
          echo -e "Labels: ${{ steps.pr_details.outputs.labels }}" >> CHANGELOG.md
          echo -e "Assignees: ${{ steps.pr_details.outputs.assignees }}" >> CHANGELOG.md

      # Create GitHub Release
      - name: Create GitHub Release
        uses: actions/create-release@v1
        with:
          tag_name: "${{ env.NEW_TAG }}"
          release_name: "Release ${{ env.NEW_TAG }}"
          body_path: CHANGELOG.md
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
